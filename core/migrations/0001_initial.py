# Generated by Django 5.1.1 on 2024-10-21 12:45

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0002_supplier'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('product_type', models.CharField(max_length=50)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Barcode must be numeric.', regex='^\\d+$')])),
            ],
        ),
        migrations.CreateModel(
            name='PharmacyProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveBigIntegerField()),
                ('expiration_date', models.DateField()),
                ('stock_level', models.PositiveIntegerField()),
                ('pharmacy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.pharmacy')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.product')),
            ],
            options={
                'unique_together': {('product', 'pharmacy')},
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.PositiveIntegerField()),
                ('discount', models.PositiveIntegerField()),
                ('payment_received', models.PositiveIntegerField()),
                ('pharmacist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pharmacy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='users.pharmacy')),
            ],
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price', models.PositiveIntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pharmacyproduct')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.sale')),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.product')),
                ('generic_name', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturer', models.CharField(max_length=255)),
                ('dosage_form', models.CharField(choices=[('tablet', 'Tablet'), ('chewable tablet', 'Chewable Tablet'), ('capsule', 'Capsule'), ('syrup', 'Syrup'), ('injection', 'Injection'), ('solution', 'Solution'), ('liquid', 'Liquid'), ('suspension', 'Suspension'), ('elixir', 'Elixir'), ('tonic', 'Tonic'), ('linctus', 'Linctus'), ('pasty', 'Pasty'), ('powder', 'Powder'), ('granules', 'Granules'), ('ointment', 'Ointment'), ('cream', 'Cream'), ('patch', 'Patch'), ('enema', 'Enema'), ('gel', 'Gel'), ('liniment', 'Liniment'), ('suppository', 'Suppository'), ('transdermal patch', 'Transdermal Patch'), ('nasal spray', 'Nasal Spray'), ('topical solution', 'Topical Solution'), ('eye drops', 'Eye Drops')], max_length=50)),
                ('strength', models.CharField(max_length=100)),
                ('active_ingredients', models.TextField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('generic_name', 'manufacturer', 'dosage_form', 'strength')},
            },
            bases=('core.product',),
        ),
    ]
